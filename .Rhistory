knitr::opts_chunk$set(echo = FALSE, warning = FALSE, results = FALSE, message = FALSE)
library('tidyverse')
source('~/scripts/theme_kirsten.R')
# Chunk 1: setup
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, results = FALSE, message = FALSE)
library('tidyverse')
source('~/scripts/theme_kirsten.R')
find_seq_error <- function(vector){
n <- vector[1]
for(y in vector){
if(y <= n){
n = y
} else {
reverse = y
return(reverse)
break
}
}
}
icbg_lookup <- read_tsv('data/icbg_lookup.tsv')
test <- c(1, 100)
library(tidyverse)
df <- data.frame(
x = rep(c(2, 5, 7, 9, 12), 2),
y = rep(c(1, 2), each = 5),
z = factor(rep(1:5, each = 2)),
w = rep(diff(c(0, 4, 6, 8, 10, 14)), 2)
)
df
ggplot(df, aes(x, y)) +
geom_tile(aes(fill = z), colour = "grey50")
ggplot(df, aes(xmin = x - w / 2, xmax = x + w / 2, ymin = y, ymax = y + 1)) +
geom_rect(aes(fill = z), colour = "grey50")
df <- data.frame(
s = c(5, 15, 30),
e = c(10, 25, 40),
y = c(1, 2, 3)
)
df
ggplot(df, aes(xmin = s, xmax = e, ymin = y - 0.5, ymax = y + 0.5)) +
geom_rect(aes(fill = z), colour = "grey50")
ggplot(df, aes(xmin = s, xmax = e, ymin = y - 0.5, ymax = y + 0.5)) +
geom_rect(aes(), colour = "grey50")
df <- data.frame(
s = c(5, 15, 30),
e = c(10, 25, 40),
y = c(1, 1, 1)
)
ggplot(df, aes(xmin = s, xmax = e, ymin = y - 0.5, ymax = y + 0.5)) +
geom_rect(aes(), colour = "grey50")
df <- data.frame(
g = c(rep('gene1', 3), rep('gene2', 3))
s = c(5, 15, 30, 6, 8, 15),
e = c(10, 25, 40, 7, 10, 20),
y = c(1, 1, 1, 2, 2, 2)
)
ggplot(df, aes(xmin = s, xmax = e, ymin = y - 0.5, ymax = y + 0.5)) +
geom_rect(aes(), colour = "grey50")
df <- data.frame(
g = c(rep('gene1', 3), rep('gene2', 3)),
s = c(5, 15, 30, 6, 8, 15),
e = c(10, 25, 40, 7, 10, 20),
y = c(1, 1, 1, 2, 2, 2)
)
ggplot(df, aes(xmin = s, xmax = e, ymin = y - 0.5, ymax = y + 0.5)) +
geom_rect(aes(), colour = "grey50")
ggplot(df, aes(xmin = s, xmax = e, ymin = y - 0.3, ymax = y + 0.3)) +
geom_rect(aes(), colour = "grey50")
library(pheatmap)
library(tidyverse)
library(pheatmap)
library(vegan)
library(ggord)
munge_gca <- function(x){
paste(strsplit(x, split = "_")[[1]][c(1,2)], collapse = "_")
}
metadata <- read_csv('metadata.csv')
meta_levels <- metadata$genus_species
## dive in deeper to presence absence output
ant_ag <- na.omit(unique(metadata$Agriculture))
files <- list.files("parsed_networks", pattern = 'network', recursive = TRUE, full.names = TRUE)
all_data <- lapply(files, function(x){
table <- read_tsv(x, col_names = c('component', 'bigscape')) %>%
mutate(BGC_type = sub("_.*$", "", basename(x)))
}) %>% bind_rows() %>%
group_by(bigscape) %>%
mutate(acc = ifelse(grepl('GCA', bigscape),
yes = munge_gca(bigscape),
no = ifelse(grepl('SPDT', bigscape),
yes = paste(strsplit(bigscape, split = "\\.")[[1]][c(1,2)], collapse = "."),
no = sub("_.*$", "", bigscape)))) %>%
ungroup() %>%
left_join(., metadata, by = 'acc') %>%
mutate(Presence = 1) %>%
group_by(component, BGC_type) %>%
mutate(num_agricultures = length(unique(na.omit(Agriculture)))) %>% ## removes outgroups from count
filter(!is.na(acc)) %>%
mutate(Agriculture = ifelse(is.na(Agriculture),
yes = 'Outgroup',
no = Agriculture)) %>%
ungroup() %>%
group_by(BGC_type, component) %>%
mutate(bgc_plot_label = ifelse(any(grepl('BGC', acc)),
yes = paste(grep('BGC', acc, value = TRUE), collapse = ","),
no = paste0(BGC_type, "_", component))) %>%
ungroup()
#View(select(all_data, component, Agriculture, bigscape, num_agricultures, BGC_type))
#unique(all_data$acc)
#all_data %>% filter(component == 'component_111', BGC_type == 'mix') %>% View()
## do all bgc first with 'mix' seperate
ann_colors = list(
'BGC_type' = c(NRPS = '#1B9E77', PKSI = '#D95F02', Terpene = '#7570B3', Others = "#E7298A", PKS.NRP = "#66A61E"),
'Agriculture' = c(Leafcutter = 'green4', Lower = 'yellow', Coral = 'magenta3', Higher = 'blue3', 'NA' = 'white')
)
all_bgc <- all_data %>%
filter(!BGC_type %in% c('PKSother', 'mix'),
num_agricultures > 0,
!grepl('BGC', acc)) %>% ## only look at BGC that are in at least 1 ant agriculture
select(bgc_plot_label, genus_species, Presence, BGC_type) %>%
mutate(bgc_plot_label = sub('-', '.', bgc_plot_label)) %>%
mutate(BGC_type = sub('-', '.', BGC_type))
#all_bgc %>% filter(component == 'component_111', BGC_type == 'mix') %>% View()
all_bgc_s <- all_bgc %>% select(-BGC_type) %>%
distinct() %>%
spread(bgc_plot_label, Presence) %>%
data.frame()
rownames(all_bgc_s) <- all_bgc_s$genus_species
all_bgc_s$genus_species <- NULL
all_bgc_s <- as.matrix(all_bgc_s)
all_bgc_s[is.na(all_bgc_s)] <- 0
rows_order <- meta_levels[which(meta_levels %in% rownames(all_bgc_s))]
m <- metadata %>% select(Agriculture, genus_species) %>% distinct() %>% data.frame()
rownames(m) <- m$genus_species
m$genus_species <- NULL
annotation_col <- all_bgc %>%
select(-genus_species, -Presence) %>%
filter(bgc_plot_label %in% colnames(all_bgc_s)) %>%
distinct() %>%
data.frame()
rownames(annotation_col) <- annotation_col$bgc_plot_label
annotation_col$bgc_plot_label <- NULL
annotation_row = data.frame(
"Agriculture" = m[rownames(all_bgc_s), ],
row.names = rownames(all_bgc_s),
stringsAsFactors = FALSE
)
pheatmap::pheatmap(all_bgc_s[rows_order,],
legend = FALSE,
color = c('grey87', 'black'),
cluster_rows = FALSE,
cluster_cols = TRUE,
border_color = "grey70",
cellwidth = 10,
cellheight = 10,
annotation_row = annotation_row,
annotation_col = annotation_col,
annotation_colors = ann_colors,
main = "Components present in at least one ant agriculture",
filename = paste0('all_BGC_components.pdf'))
setwd("~/GoogleDriveLab/Figures/EscoEvoGenomics")
library(tidyverse)
library(pheatmap)
library(vegan)
library(ggord)
munge_gca <- function(x){
paste(strsplit(x, split = "_")[[1]][c(1,2)], collapse = "_")
}
#
# get_cluster <- function(x){
#   spliter = strsplit(x, split = "/")[[1]][c(4, 5)]
#   cluster_list <- strsplit(spliter[2], split = "\\.")[[1]]
#   cluster = cluster_list[which(grepl('cluster', cluster_list))]
#   paste0(spliter[1], ":", cluster)
# }
metadata <- read_csv('metadata.csv')
meta_levels <- metadata$genus_species
## dive in deeper to presence absence output
ant_ag <- na.omit(unique(metadata$Agriculture))
files <- list.files("parsed_networks", pattern = 'network', recursive = TRUE, full.names = TRUE)
all_data <- lapply(files, function(x){
table <- read_tsv(x, col_names = c('component', 'bigscape')) %>%
mutate(BGC_type = sub("_.*$", "", basename(x)))
}) %>% bind_rows() %>%
group_by(bigscape) %>%
mutate(acc = ifelse(grepl('GCA', bigscape),
yes = munge_gca(bigscape),
no = ifelse(grepl('SPDT', bigscape),
yes = paste(strsplit(bigscape, split = "\\.")[[1]][c(1,2)], collapse = "."),
no = sub("_.*$", "", bigscape)))) %>%
ungroup() %>%
left_join(., metadata, by = 'acc') %>%
mutate(Presence = 1) %>%
group_by(component, BGC_type) %>%
mutate(num_agricultures = length(unique(na.omit(Agriculture)))) %>% ## removes outgroups from count
filter(!is.na(acc)) %>%
mutate(Agriculture = ifelse(is.na(Agriculture),
yes = 'Outgroup',
no = Agriculture)) %>%
ungroup() %>%
group_by(BGC_type, component) %>%
mutate(bgc_plot_label = ifelse(any(grepl('BGC', acc)),
yes = paste(grep('BGC', acc, value = TRUE), collapse = ","),
no = paste0(BGC_type, "_", component))) %>%
ungroup()
#View(select(all_data, component, Agriculture, bigscape, num_agricultures, BGC_type))
#unique(all_data$acc)
#all_data %>% filter(component == 'component_111', BGC_type == 'mix') %>% View()
## do all bgc first with 'mix' seperate
ann_colors = list(
'BGC_type' = c(NRPS = '#1B9E77', PKSI = '#D95F02', Terpene = '#7570B3', Others = "#E7298A", PKS.NRP = "#66A61E"),
'Agriculture' = c(Leafcutter = 'green4', Lower = 'yellow', Coral = 'magenta3', Higher = 'blue3', 'NA' = 'white')
)
all_bgc <- all_data %>%
filter(!BGC_type %in% c('PKSother', 'mix'),
num_agricultures > 0,
!grepl('BGC', acc)) %>% ## only look at BGC that are in at least 1 ant agriculture
select(bgc_plot_label, genus_species, Presence, BGC_type) %>%
mutate(bgc_plot_label = sub('-', '.', bgc_plot_label)) %>%
mutate(BGC_type = sub('-', '.', BGC_type))
#all_bgc %>% filter(component == 'component_111', BGC_type == 'mix') %>% View()
all_bgc_s <- all_bgc %>% select(-BGC_type) %>%
distinct() %>%
spread(bgc_plot_label, Presence) %>%
data.frame()
rownames(all_bgc_s) <- all_bgc_s$genus_species
all_bgc_s$genus_species <- NULL
all_bgc_s <- as.matrix(all_bgc_s)
all_bgc_s[is.na(all_bgc_s)] <- 0
rows_order <- meta_levels[which(meta_levels %in% rownames(all_bgc_s))]
m <- metadata %>% select(Agriculture, genus_species) %>% distinct() %>% data.frame()
rownames(m) <- m$genus_species
m$genus_species <- NULL
annotation_col <- all_bgc %>%
select(-genus_species, -Presence) %>%
filter(bgc_plot_label %in% colnames(all_bgc_s)) %>%
distinct() %>%
data.frame()
rownames(annotation_col) <- annotation_col$bgc_plot_label
annotation_col$bgc_plot_label <- NULL
annotation_row = data.frame(
"Agriculture" = m[rownames(all_bgc_s), ],
row.names = rownames(all_bgc_s),
stringsAsFactors = FALSE
)
pheatmap::pheatmap(all_bgc_s[rows_order,],
legend = FALSE,
color = c('grey87', 'black'),
cluster_rows = FALSE,
cluster_cols = TRUE,
border_color = "grey70",
cellwidth = 10,
cellheight = 10,
annotation_row = annotation_row,
annotation_col = annotation_col,
annotation_colors = ann_colors,
main = "Components present in at least one ant agriculture",
filename = paste0('all_BGC_components.pdf'))
## PCA
pca_data <- prcomp(all_bgc_s)
eigs <- pca_data$sdev^2
proportion = (eigs/sum(eigs))*100
head(proportion)
cumulative = cumsum(eigs)/sum(eigs)
## look at this
#head(pca_data$x)
screeplot(pca_data)
## bray curtis distance is more resilient to nulls
example_NMDS=metaMDS(all_bgc_s, # Our community-by-species matrix
k=4) # The number of reduced dimensions
stressplot(example_NMDS)
treat = replace_na(annotation_row[,'Agriculture'], replace = 'Outgroup') ## corresponds to rows/communities (genomes)
## ellipse
ordiplot(example_NMDS,type="n")
#ordiplot(example_NMDS,type="n")
ordiellipse(example_NMDS,groups=treat,label=T)
bgc_dist <- vegdist(all_bgc_s)
ano_test <- anosim(bgc_dist, grouping = treat)
ggord(example_NMDS, treat)
## bray curtis distance is more resilient to nulls
example_NMDS=metaMDS(all_bgc_s, # Our community-by-species matrix
k=3) # The number of reduced dimensions
stressplot(example_NMDS)
treat = replace_na(annotation_row[,'Agriculture'], replace = 'Outgroup') ## corresponds to rows/communities (genomes)
ggord(example_NMDS, treat)
cumulative = cumsum(eigs)/sum(eigs)
head(proportion)
?ggord
ggord(example_NMDS, treat, arrow = NULL)
ggord(example_NMDS, treat, arrow = NULL, vec_lab = NULL)
ggord
p <- ggord(example_NMDS, treat, arrow = NULL)
p
return(p)
ggord(example_NMDS, treat, arrow = NULL, ptslab = FALSE)
ggord(example_NMDS, treat, arrow = NULL, addpts = FALSE)
ggord(example_NMDS, treat, arrow = NULL, labcol = NUL)
ggord(example_NMDS, treat, arrow = NULL, labcol = NULL)
ggord(example_NMDS, treat, arrow = NULL, vec_lab = FALSE)
ggord(example_NMDS, treat, arrow = NULL, vec_lab = NULL)
ggord(example_NMDS, treat, arrow = NULL, vec_lab = FALSE)
ggord(example_NMDS, treat, arrow = NULL, vecs = FALSE)
ggord(obs = example_NMDS, grp_in = treat, arrow = NULL, vecs = NULL)
ggord(obs = example_NMDS, grp_in = treat, arrow = NULL)
ggord(example_NMDS, grp_in = treat, arrow = NULL, obslab = FALSE)
ggord(example_NMDS, grp_in = treat, arrow = NULL, obslab = TRUE)
ggord(example_NMDS, grp_in = treat, arrow = NULL, obslab = FALSE, vecslab = FALSE)
ggord(example_NMDS, grp_in = treat, arrow = NULL, obslab = FALSE, txt = FALSE)
ggord(example_NMDS, grp_in = treat, arrow = NULL, obslab = FALSE, txt = FALSE) + theme_classic()
ggord(example_NMDS, grp_in = treat, arrow = NULL, obslab = FALSE, txt = FALSE, vectyp='blank',
poly=FALSE, size=2) + theme_classic()
ggord(example_NMDS, grp_in = treat, arrow = NULL, obslab = FALSE, txt = FALSE,
#vectyp='blank',
poly=FALSE, size=2) + theme_classic()
ggord(example_NMDS, grp_in = treat, arrow = NULL,
txt = FALSE,
poly=FALSE, size=2) + theme_classic()
ano_test
ano_test$signif
ano_test$statistic
round(ano_test$statistic)
round(ano_test$statistic, digits = 2)
ggord(example_NMDS, grp_in = treat, arrow = NULL, obslab = FALSE,
txt = FALSE,
poly=FALSE, size=2) + theme_classic() +
labs(subtitle = paste('Pval:', ano_test$signif, ", R:", round(ano_test$statistic, digits = 2)))
head(all_bgc_s)
all_bgc <- all_data %>%
filter(!BGC_type %in% c('mix'),
!grepl('BGC', acc)) %>% ## only look at BGC that are in at least 1 ant agriculture
select(bgc_plot_label, genus_species, Presence, BGC_type) %>%
mutate(bgc_plot_label = sub('-', '.', bgc_plot_label)) %>%
mutate(BGC_type = sub('-', '.', BGC_type))
all_bgc_s <- all_bgc %>% select(-BGC_type) %>%
distinct() %>%
spread(bgc_plot_label, Presence) %>%
data.frame()
rownames(all_bgc_s) <- all_bgc_s$genus_species
all_bgc_s$genus_species <- NULL
all_bgc_s <- as.matrix(all_bgc_s)
all_bgc_s[is.na(all_bgc_s)] <- 0
pca_data <- prcomp(all_bgc_s)
eigs <- pca_data$sdev^2
proportion = (eigs/sum(eigs))*100
head(proportion)
cumulative = cumsum(eigs)/sum(eigs)
## look at this
#head(pca_data$x)
screeplot(pca_data)
## bray curtis distance is more resilient to nulls
example_NMDS=metaMDS(all_bgc_s, # Our community-by-species matrix
k=3) # The number of reduced dimensions ## components with >10% variance explained
stressplot(example_NMDS)
treat = replace_na(annotation_row[,'Agriculture'], replace = 'Outgroup') ## corresponds to rows/communities (genomes)
## test for significance
bgc_dist <- vegdist(all_bgc_s)
ano_test <- anosim(bgc_dist, grouping = treat)
summary(ano_test)
plot(ano_test)
## test for significance
bgc_dist <- vegdist(all_bgc_s)
ano_test <- anosim(bgc_dist, grouping = treat)
summary(ano_test)
plot(ano_test)
plot(ano_test, notch = FALSE)
## test for significance
bgc_dist <- vegdist(all_bgc_s)
ano_test <- anosim(bgc_dist, grouping = treat)
summary(ano_test)
plot(ano_test)
plot(ano_test, notch=FALSE)
ggord(example_NMDS, grp_in = treat, arrow = NULL, obslab = FALSE,
txt = FALSE,
poly=FALSE, size=2) + theme_classic() +
labs(title = 'BGCs stratify by ant agriculture',
subtitle = paste('Pval:', ano_test$signif, ", R:", round(ano_test$statistic, digits = 2)))
ggord(example_NMDS, grp_in = treat, arrow = NULL, obslab = FALSE,
txt = FALSE,
poly=FALSE, size=2) + theme_classic() +
labs(title = 'BGCs stratify by ant agriculture',
subtitle = paste('Pval:', ano_test$signif, ", R:", round(ano_test$statistic, digits = 2)),
caption = 'All BGCs were ordinated, regardless of presence in ant agriculture')
head(bgc_dist)
adonis(bgc_dist ~ Agriculture, data=env, permutations=99)
?vegdist
head(all_bgc)
head(all_bgc_s)
head(metadata)
metadata_s <- metadata
rownames(metadata) <- metadata$genus_species
metadata_s <- data.frame(metadata, stringsAsFactors = FALSE)
rownames(metadata) <- metadata$genus_species
rownames(metadata_s) <- metadata$genus_species
all_bgc_a <- cbind(all_bgc_s, metadata_s[rownames(all_bgc_s), ])
head(all_bgc_a)
adonis(bgc_dist ~ Agriculture, data=all_bgc_a, permutations=99)
